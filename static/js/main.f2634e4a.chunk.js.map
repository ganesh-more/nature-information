{"version":3,"sources":["components/Menubar/Menubar.js","mock-data/menu-list/menu-list.js","mock-data/vertical-menu-list/vertical-menu-list.js","mock-data/item-details/item-details.js","components/Sections/info-section.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Menubar","oProps","menuList","sClassName","wrapperClassName","className","map","oMenu","activeMenuId","id","onClick","onMenuClick","label","trees","mountains","oceans","atlantic","text","pacific","arctic","nandaDevi","kamet","saserKangri","mango","jackFruit","coconut","InfoSection","info","App","useState","MenuList","sActiveManuId","setActiveMenuId","VerticalMenuList","sActiveVerticalManuId","setActiveVerticalMenuId","prepareDataFroGrid","aRowData","forEach","oItem","push","information","ItemDetails","sMenuId","style","height","width","defaultColDef","flex","minWidth","resizable","floatingFilter","columnDefs","field","filter","suppressSizeToFit","onFirstDataRendered","p","allColumnIds","columnApi","getAllColumns","column","colId","autoSizeColumns","rowData","getInfoSection","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAaeA,MAXf,SAAiBC,GACf,IAAMC,EAAWD,EAAOC,SACpBC,EAAaF,EAAOG,iBAAmBH,EAAOG,iBAAmB,kBAAoB,kBACzF,OACE,qBAAKC,UAAWF,EAAhB,SACGD,EAASI,KAAI,SAACC,GAAD,OAAW,qBAAKF,UAAWJ,EAAOO,eAAiBD,EAAME,GAAK,gBAAkB,QAChEC,QAAS,WAAOT,EAAOU,YAAYJ,EAAME,KAD9C,SACqDF,EAAMK,cCR3E,GACb,CACEH,GAAI,SACJG,MAAO,UAET,CACEH,GAAI,QACJG,MAAO,SAET,CACEH,GAAI,YACJG,MAAO,aAET,CACEH,GAAI,cACJG,MAAO,iBCfI,GACbC,MAAO,CACH,CACEJ,GAAI,QACJG,MAAO,SAET,CACEH,GAAI,YACJG,MAAO,cAET,CACEH,GAAI,UACJG,MAAO,WAEX,CACEH,GAAI,OACJG,MAAO,iBAGXE,UAAW,CACT,CACEL,GAAI,YACJG,MAAO,cAET,CACEH,GAAI,QACJG,MAAO,SAET,CACEH,GAAI,cACJG,MAAO,gBAET,CACEH,GAAI,OACJG,MAAO,iBAGXG,OAAQ,CACN,CACEN,GAAI,WACJG,MAAO,YAET,CACEH,GAAI,UACJG,MAAO,WAET,CACEH,GAAI,SACJG,MAAO,UAET,CACEH,GAAI,OACJG,MAAO,kBCpDE,GACbI,SAAU,CACRC,KAAM,0TAKRC,QAAS,CACPD,KAAM,gQAIRE,OAAQ,CACNF,KAAM,4LAGRG,UAAW,CACTH,KAAM,0RAIRI,MAAO,CACLJ,KAAM,qRAIRK,YAAa,CACXL,KAAM,uNAIRM,MAAO,CACLN,KAAM,0MAIRO,UAAW,CACTP,KAAM,wOAIRQ,QAAS,CACPR,KAAM,mV,yBC9BKS,MAVf,SAAqBzB,GACnB,IAAMgB,EAAOhB,EAAO0B,MAAQ1B,EAAO0B,KAAKV,KACpCd,EAAaF,EAAOG,iBAAmBH,EAAOG,iBAAmB,sBAAwB,sBAC7F,OACI,qBAAKC,UAAWF,EAAhB,SACE,4BAAIc,OC2FGW,MArFf,WAAgB,IAAD,EAC0BC,mBAASC,EAAS,GAAGrB,IAD/C,mBACRsB,EADQ,KACOC,EADP,OAE0CH,mBAASI,EAAiBF,GAAe,GAAGtB,IAFtF,mBAERyB,EAFQ,KAEeC,EAFf,KAYTC,EAAqB,WACvB,IAAMC,EAAW,GASjB,OARAJ,EAAiBF,GAAeO,SAAQ,SAACC,GACtB,SAAbA,EAAM9B,IACR4B,EAASG,KAAK,CACZ5B,MAAO2B,EAAM3B,MACb6B,YAAaC,EAAYH,EAAM9B,IAAIQ,UAIlCoB,GAwCT,OACI,sBAAKhC,UAAU,MAAf,UACE,cAAC,EAAD,CAEIH,SAAU4B,EACVzB,UAAW,GACXM,YAhEmB,SAACgC,GAC5BX,EAAgBW,GAChBR,EAAwBF,EAAiBU,GAAS,GAAGlC,KA+D7CD,aAAcuB,GAJT,cAMT,sBAAK1B,UAAW,wBAAhB,UACE,cAAC,EAAD,CAEIH,SAAU+B,EAAiBF,GAC3B3B,iBAAkB,WAClBO,YApEyB,SAACgC,GACpCR,EAAwBQ,IAoEdnC,aAAc0B,GAJT,YAhDI,WACnB,GAA6B,SAA1BA,EAAkC,CAWnC,OACI,qBAAK7B,UAAU,kBAAkBuC,MAAO,CAACC,OAAQ,OAAQC,MAAO,QAAhE,SACE,eAAC,cAAD,CACIC,cATU,CAClBC,KAAM,EACFC,SAAU,IACVC,WAAW,EACXC,gBAAgB,GAMZC,WAdS,CACjB,CAAEC,MAAO,QAASC,QAAQ,GAC1B,CAAED,MAAO,cAAeE,mBAAmB,IAanCC,oBAAqB,SAACC,GACpB,IAAIC,EAAe,GACnBD,EAAEE,UAAUC,gBAAgBtB,SAAQ,SAAUuB,GAC5CH,EAAalB,KAAKqB,EAAOC,UAG3BL,EAAEE,UAAUI,gBAAgBL,GAAc,IAE5CM,QAAS5B,IAXb,UAYE,cAAC,eAAD,CAAciB,MAAM,UACpB,cAAC,eAAD,CAAcH,WAAW,EAAMG,MAAM,qBAM7C,OAAO,cAAC,EAAD,CAAa1B,KAAMe,EAAYR,KAqBjC+B,UChFIC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f2634e4a.chunk.js","sourcesContent":["import \"./basic-menubar.css\"\n\nfunction Menubar(oProps) {\n  const menuList = oProps.menuList;\n  let sClassName = oProps.wrapperClassName ? oProps.wrapperClassName + \" menubarWrapper\" : \" menubarWrapper\";\n  return (\n    <div className={sClassName}>\n      {menuList.map((oMenu) => <div className={oProps.activeMenuId === oMenu.id ? \"menu selected\" : \"menu \"}\n                                    onClick={() => {oProps.onMenuClick(oMenu.id)}}>{oMenu.label}</div>)}\n    </div>\n  );\n}\n\nexport default Menubar;\n","export default [\r\n  {\r\n    id: \"oceans\",\r\n    label: \"Oceans\"\r\n  },\r\n  {\r\n    id: \"trees\",\r\n    label: \"Trees\",\r\n  },\r\n  {\r\n    id: \"mountains\",\r\n    label: \"Mountains\"\r\n  },\r\n  {\r\n    id: \"wildAnimals\",\r\n    label: \"Wild Animals\"\r\n  },\r\n\r\n]\r\n","export default {\r\n  trees: [\r\n      {\r\n        id: \"mango\",\r\n        label: \"Mango\"\r\n      },\r\n      {\r\n        id: \"jackFruit\",\r\n        label: \"Jack Fruit\"\r\n      },\r\n      {\r\n        id: \"coconut\",\r\n        label: \"Coconut\"\r\n      },\r\n    {\r\n      id: \"grid\",\r\n      label: \"Show in grid\"\r\n    }\r\n  ],\r\n  mountains: [\r\n    {\r\n      id: \"nandaDevi\",\r\n      label: \"Nanda Devi\"\r\n    },\r\n    {\r\n      id: \"kamet\",\r\n      label: \"Kamet\"\r\n    },\r\n    {\r\n      id: \"saserKangri\",\r\n      label: \"Saser Kangri\"\r\n    },\r\n    {\r\n      id: \"grid\",\r\n      label: \"Show in grid\"\r\n    }\r\n  ],\r\n  oceans: [\r\n    {\r\n      id: \"atlantic\",\r\n      label: \"Atlantic\"\r\n    },\r\n    {\r\n      id: \"pacific\",\r\n      label: \"Pacific\"\r\n    },\r\n    {\r\n      id: \"arctic\",\r\n      label: \"Arctic\"\r\n    },\r\n    {\r\n      id: \"grid\",\r\n      label: \"Show in grid\"\r\n    }\r\n  ]\r\n}","export default {\r\n  atlantic: {\r\n    text: \"The Atlantic Ocean is the second-largest of the world's oceans, \" +\r\n    \"with an area of about 106,460,000 km². It covers approximately 20 percent of Earth's surface \" +\r\n    \"and about 29 percent of its water surface area. It is known to separate the \" +\r\n    \"\\\"Old World\\\" from the \\\"New World\\\" in the European perception of the World\"\r\n  },\r\n  pacific: {\r\n    text: \"The Pacific Ocean is the largest and deepest of Earth's oceanic divisions. \" +\r\n    \"It extends from the Arctic Ocean in the north to the Southern Ocean in the south \" +\r\n    \"and is bounded by the continents of Asia and Australia in the west and the Americas in the east.\"\r\n  },\r\n  arctic: {\r\n    text: \"The Arctic Ocean is the smallest and shallowest of the world's five major oceans. \" +\r\n    \"It spans an area of approximately 14,060,000 km² and is also known as the coldest of all the oceans\"\r\n  },\r\n  nandaDevi: {\r\n    text: \"Nanda Devi is the second highest mountain in India after Kangchenjunga \" +\r\n    \"and the highest located entirely within the country. It is the 23rd-highest peak in the world. \" +\r\n    \"It was considered the highest mountain in the world before computations in 1808 proved Dhaulagiri to be higher. \"\r\n  },\r\n  kamet: {\r\n    text: \"Kamet (Hindi: कामेत) is the second highest mountain in the Garhwal region of \" +\r\n    \"Uttarakhand, India, after Nanda Devi. It lies in the Chamoli District of Uttarakhand. \" +\r\n    \"Its appearance resembles a giant pyramid topped by a flat summit area with two peaks.\"\r\n  },\r\n  saserKangri: {\r\n    text: \"Saser Kangri is a mountain in India. \" +\r\n    \"It is the highest peak in the Saser Muztagh, the easternmost subrange of the Karakoram range. \" +\r\n    \"Sasir Kangri is located within Ladakh, the northernmost union territory in India\"\r\n  },\r\n  mango: {\r\n    text: \"A mango is an edible stone fruit produced by the tropical tree Mangifera indica \" +\r\n    \"which is believed to have originated from the region between northwestern Myanmar, \" +\r\n    \"Bangladesh, and northeastern India.\"\r\n  },\r\n  jackFruit: {\r\n    text: \"The jackfruit, also known as jack tree, is a species of tree in the fig, mulberry, \" +\r\n    \"and breadfruit family. Its origin is in the region between the Western Ghats of southern India, \" +\r\n    \"all of Sri Lanka and the rainforests of Malaysia.\"\r\n  },\r\n  coconut: {\r\n    text: \"Cocos nucifera is a large palm, growing up to 30 m (100 ft) tall, \" +\r\n    \"with pinnate leaves 4–6 m (13–20 ft) long, and pinnae 60–90 cm (2–3 ft) long; \" +\r\n    \"old leaves break away cleanly, leaving the trunk smooth. On fertile soil, \" +\r\n    \"a tall coconut palm tree can yield up to 75 fruits per year, but more often yields less than 30.\"\r\n  }\r\n}","import \"./basic-info-section.css\"\r\n\r\nfunction InfoSection(oProps) {\r\n  const text = oProps.info && oProps.info.text;\r\n  let sClassName = oProps.wrapperClassName ? oProps.wrapperClassName + \" infoSectionWrapper\" : \" infoSectionWrapper\";\r\n  return (\r\n      <div className={sClassName}>\r\n        <p>{text}</p>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default InfoSection;\r\n","import './App.css';\nimport MenuBar from \"../Menubar/Menubar\";\nimport MenuList from \"../../mock-data/menu-list/menu-list\";\nimport VerticalMenuList from \"../../mock-data/vertical-menu-list/vertical-menu-list\";\nimport ItemDetails from \"../../mock-data/item-details/item-details\";\nimport {AgGridColumn, AgGridReact} from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nimport {useState} from \"react\";\nimport InfoSection from \"../Sections/info-section\";\n\nfunction App() {\n  let [sActiveManuId, setActiveMenuId] = useState(MenuList[0].id);\n  let [sActiveVerticalManuId, setActiveVerticalMenuId] = useState(VerticalMenuList[sActiveManuId][0].id);\n\n  const onHorizontalBarClick = (sMenuId) => {\n    setActiveMenuId(sMenuId);\n    setActiveVerticalMenuId(VerticalMenuList[sMenuId][0].id);\n  };\n  const onVerticalHorizontalBarClick = (sMenuId) => {\n    setActiveVerticalMenuId(sMenuId);\n  };\n\n  let prepareDataFroGrid = () => {\n    const aRowData = [];\n    VerticalMenuList[sActiveManuId].forEach((oItem)=> {\n      if (oItem.id !== \"grid\") {\n        aRowData.push({\n          label: oItem.label,\n          information: ItemDetails[oItem.id].text\n        })\n      }\n    })\n    return aRowData;\n  };\n\n  let getInfoSection = () => {\n    if(sActiveVerticalManuId === \"grid\") {\n      const columnDefs = [\n        { field: \"label\", filter: true,},\n        { field: \"information\", suppressSizeToFit: true}\n      ];\n      let defaultColDef = {\n        flex: 1,\n            minWidth: 100,\n            resizable: true,\n            floatingFilter: true,\n      }\n      return (\n          <div className=\"ag-theme-alpine\" style={{height: \"100%\", width: \"100%\"}}>\n            <AgGridReact\n                defaultColDef = {defaultColDef}\n                columnDefs={columnDefs}\n                onFirstDataRendered={(p) => {\n                  var allColumnIds = [];\n                  p.columnApi.getAllColumns().forEach(function (column) {\n                    allColumnIds.push(column.colId);\n                  });\n\n                  p.columnApi.autoSizeColumns(allColumnIds, false);\n                }}\n                rowData={prepareDataFroGrid()}>\n              <AgGridColumn field=\"label\" ></AgGridColumn>\n              <AgGridColumn resizable={true} field=\"information\"></AgGridColumn>\n            </AgGridReact>\n          </div>\n      );\n    }\n    else {\n      return <InfoSection info={ItemDetails[sActiveVerticalManuId]}/>\n    }\n  };\n\n  return (\n      <div className=\"App\">\n        <MenuBar\n            key={\"horizontal\"}\n            menuList={MenuList}\n            className={\"\"}\n            onMenuClick={onHorizontalBarClick}\n            activeMenuId={sActiveManuId}\n        />\n        <div className={\"sidebarSectionWrapper\"}>\n          <MenuBar\n              key={\"vertical\"}\n              menuList={VerticalMenuList[sActiveManuId]}\n              wrapperClassName={\"vertical\"}\n              onMenuClick={onVerticalHorizontalBarClick}\n              activeMenuId={sActiveVerticalManuId}\n          />\n          {getInfoSection()}\n        </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}